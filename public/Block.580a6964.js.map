{"mappings":"A,C,E,A,A,W,iB,C,Q,A,E,Q,S,C,C,C,E,O,c,C,E,O,C,Q,C,I,I,E,I,K,E,W,C,E,a,C,C,ECAO,OAAM,EACX,SAAW,CAAC,GAAG,AAAC,AAChB,CAAA,KAAO,EAAG,AAEV,aAAY,CAAI,CAAE,CAAQ,CAAE,CAC1B,IAAI,CAAC,QAAQ,CAAG,EAAS,GAAG,CAAC,AAAC,GAAU,EAAM,MAAM,IACpD,IAAI,CAAC,IAAI,CAAG,EACZ,IAAI,CAAC,IAAI,CAAG,CAAC,EAAE,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,AACzC,CAEA;;;GAGC,EACD,OAAO,CAAU,CAAE,CACjB,IAAM,EAAU,SAAS,aAAa,CAAC,MACvC,CAAA,EAAQ,SAAS,CAAG,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAC1C,EAAQ,SAAS,CAAG,IAAI,CAAC,IAAI,CAC7B,EAAW,WAAW,CAAC,EACzB,CAEA;;;;GAIC,EACD,mBAAmB,CAAU,CAAE,CAAY,CAAE,CAC3C,IAAM,EAAU,SAAS,aAAa,CAAC,MACvC,CAAA,EAAQ,SAAS,CAAG,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAC1C,EAAQ,SAAS,CAAG,IAAI,CAAC,IAAI,CAC7B,EAAQ,gBAAgB,CAAC,WAAW,OAAO,CAAC,CAAC,EAAI,KAC/C,EAAG,WAAW,CAAC,CAAY,CAAC,EAAE,CAChC,GACA,EAAW,WAAW,CAAC,EACzB,CAEA;;;;GAIC,EACD,QAAQ,CAAI,CAAE,CAAO,CAAE,CAAa,CAAE,CACpC,IAAM,EAAU,SAAS,aAAa,CAAC,MACvC,CAAA,EAAQ,SAAS,CAAG,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAC1C,EAAQ,SAAS,CAAG,IAAI,CAAC,IAAI,CAC7B,EAAQ,aAAa,CAAC,WAAW,WAAW,CAAC,GAC7C,EAAc,OAAO,CAAC,AAAC,IACrB,EAAa,MAAM,EACrB,GACA,EAAK,OAAO,CAAC,EACf,CACF,C,E,4D","sources":["<anon>","src/blocks/Block.js"],"sourcesContent":["\nfunction $parcel$export(e, n, v, s) {\n  Object.defineProperty(e, n, {get: v, set: s, enumerable: true, configurable: true});\n}\n\n      var $parcel$global = globalThis;\n    var parcelRequire = $parcel$global[\"parcelRequiref822\"];\nvar parcelRegister = parcelRequire.register;\nparcelRegister(\"eb3fU\", function(module, exports) {\n\n$parcel$export(module.exports, \"Block\", () => $a5249e4763ea7adb$export$d96a8827a60d6b69);\nclass $a5249e4763ea7adb$export$d96a8827a60d6b69 {\n    children = [\n        \"\"\n    ];\n    type = \"\";\n    constructor(type, children){\n        this.children = children.map((child)=>child.render());\n        this.type = type;\n        this.html = `${this.children.join(\"\")}`;\n    }\n    /**\n   *\n   * @param {HTMLElement} nodeToSwap\n   */ render(nodeToSwap) {\n        const element = document.createElement(\"div\");\n        element.className = `${this.type}-wrapper`;\n        element.innerHTML = this.html;\n        nodeToSwap.replaceWith(element);\n    }\n    /**\n   *\n   * @param {HTMLElement} nodeToSwap\n   * @param {HTMLPictureElement} pictureNodes\n   */ renderWithPictures(nodeToSwap, pictureNodes) {\n        const element = document.createElement(\"div\");\n        element.className = `${this.type}-wrapper`;\n        element.innerHTML = this.html;\n        element.querySelectorAll(\"picture\").forEach((el, i)=>{\n            el.replaceWith(pictureNodes[i]);\n        });\n        nodeToSwap.replaceWith(element);\n    }\n    /**\n   *\n   * @param {HTMLElement} node\n   * @param {HTMLElement[]} nodesToDelete\n   */ prepend(node, picture, nodesToDelete) {\n        const element = document.createElement(\"div\");\n        element.className = `${this.type}-wrapper`;\n        element.innerHTML = this.html;\n        element.querySelector(\"picture\").replaceWith(picture);\n        nodesToDelete.forEach((nodeToDelete)=>{\n            nodeToDelete.remove();\n        });\n        node.prepend(element);\n    }\n}\n\n});\n\n\n//# sourceMappingURL=Block.580a6964.js.map\n","export class Block {\n  children = [\"\"];\n  type = \"\";\n\n  constructor(type, children) {\n    this.children = children.map((child) => child.render());\n    this.type = type;\n    this.html = `${this.children.join(\"\")}`;\n  }\n\n  /**\n   *\n   * @param {HTMLElement} nodeToSwap\n   */\n  render(nodeToSwap) {\n    const element = document.createElement(\"div\");\n    element.className = `${this.type}-wrapper`;\n    element.innerHTML = this.html;\n    nodeToSwap.replaceWith(element);\n  }\n\n  /**\n   *\n   * @param {HTMLElement} nodeToSwap\n   * @param {HTMLPictureElement} pictureNodes\n   */\n  renderWithPictures(nodeToSwap, pictureNodes) {\n    const element = document.createElement(\"div\");\n    element.className = `${this.type}-wrapper`;\n    element.innerHTML = this.html;\n    element.querySelectorAll(\"picture\").forEach((el, i) => {\n      el.replaceWith(pictureNodes[i]);\n    });\n    nodeToSwap.replaceWith(element);\n  }\n\n  /**\n   *\n   * @param {HTMLElement} node\n   * @param {HTMLElement[]} nodesToDelete\n   */\n  prepend(node, picture, nodesToDelete) {\n    const element = document.createElement(\"div\");\n    element.className = `${this.type}-wrapper`;\n    element.innerHTML = this.html;\n    element.querySelector(\"picture\").replaceWith(picture);\n    nodesToDelete.forEach((nodeToDelete) => {\n      nodeToDelete.remove();\n    });\n    node.prepend(element);\n  }\n}\n"],"names":["parcelRequire","$parcel$global","globalThis","register","module","exports","Object","defineProperty","get","$a5249e4763ea7adb$export$d96a8827a60d6b69","set","s","enumerable","configurable","children","type","constructor","map","child","render","html","join","nodeToSwap","element","document","createElement","className","innerHTML","replaceWith","renderWithPictures","pictureNodes","querySelectorAll","forEach","el","i","prepend","node","picture","nodesToDelete","querySelector","nodeToDelete","remove"],"version":3,"file":"Block.580a6964.js.map"}